name: Cloudflare Pages Build Logs

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get Cloudflare Pages build logs
        id: fetch_logs
        run: |
          PROJECT_NAME=${{ secrets.CLOUDFLARE_PROJECT_NAME }}
          CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_API_TOKEN }}
          ACCOUNT_ID=${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

          # API call to get the latest Cloudflare Pages build logs
          RESPONSE=$(curl -s -o response.json -w "%{http_code}" -X GET \
            "https://api.cloudflare.com/client/v4/accounts/$ACCOUNT_ID/pages/projects/$PROJECT_NAME/deployments" \
            -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
            -H "Content-Type: application/json")

          # Check if the API call was successful (HTTP 2xx status code)
          if [ "$RESPONSE" -ge 200 ] && [ "$RESPONSE" -lt 300 ]; then
            echo "Cloudflare API request succeeded."
            BUILD_LOGS=$(cat response.json)
            echo "::set-output name=logs::$BUILD_LOGS"
          else
            echo "Cloudflare API request failed with status code: $RESPONSE"
            echo "Response:"
            cat response.json
            exit 1  # Explicitly fail the job
          fi

      - name: Post build logs to PR
        if: success()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const buildLogs = `${{ steps.fetch_logs.outputs.logs }}`;
            const commentBody = `Cloudflare Pages build logs:\n\n\`\`\`json\n${buildLogs}\n\`\`\``;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            })
